<?php
/**
 * Created by PhpStorm.
 * User: faya
 * Date: 25/03/2019
 * Time: 12:04
 */
namespace Aimeos\Client\Html\Common\Decorator;
//use Aimeos\Client\Html\Catalog\Lists\Standard;
use Aimeos\Client\Html\Basket\Standard\Standard;
use \Aimeos\Client\Html\Common\Decorator\Base;
use \Aimeos\Client\Html\Common\Decorator\Iface;
//use \Aimeos\Client\Html\Catalog\Base;



class Mydecorator extends \Aimeos\Client\Html\Common\Decorator\Base implements Iface
{

  public function addData(\Aimeos\MW\View\Iface $view, array &$tags = [], &$expire = null)
  {



     // TODO: Change the autogenerated stub*
      $view= parent::addData($view, $tags, $expire);

      $domains=['media','text','price','product'];

      $params=$view->param();

      $text = ( isset( $params['f_search'] ) ? (string) $params['f_search'] : '' );


      $searchs =  $view->param('f_sort');
      $listProduct=$this->createList($searchs);

      //dd($listProduct);
      //dd($listProduct[16]);
      //dd($text);
      $manager = \Aimeos\MShop\Factory::createManager( $this->getContext(), 'product' );
      $manager2 = \Aimeos\MShop\Factory::createManager( $this->getContext(), 'catalog' );


      $search = $manager->createSearch();
      $search2 = $manager2->createSearch();

      $total = 0;

      $itemlist = $manager->searchItems( $search,['media','text','price'],$total);

      $view->myparam = $listProduct;
      $view->context = $this->getContext();
      $view->listParams = $this->getClientParams( $view->param() );
       ;
       $view->total=$total;
return($view);
}

    public function createList($text){
        $manager = \Aimeos\MShop\Factory::createManager( $this->getContext(), 'product' );
        $search = $manager -> createSearch(true);
        $expr = array(
            $search->compare( '~=', 'product.label', $text ),
        $search->getConditions(),
        //$search->compare( '>=', 'product.mtime', '2012-01-01 00:00:00' ),
        );
        $search->setConditions( $search->combine( '&&', $expr ));
        $list=$manager->searchItems( $search );
        return ($list);
    }
    public function process()
    {
        // do something before
        $this->getClient()->process();
        $context = $this->getContext();
        $view = $this->getView();
        // do something afterwards
    }

}
